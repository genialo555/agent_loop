---
- name: Prometheus Node Exporter and Grafana Setup
  hosts: agent-vm
  become: yes
  vars:
    node_exporter_version: "1.7.0"
    prometheus_version: "2.48.0"
    grafana_version: "11.1.0"
    prometheus_data_dir: "/var/lib/prometheus"
    prometheus_config_dir: "/etc/prometheus"
    grafana_data_dir: "/var/lib/grafana"

  tasks:
    # Node Exporter Setup
    - name: Create prometheus user
      user:
        name: prometheus
        system: yes
        shell: /bin/false
        home: "{{ prometheus_data_dir }}"
        create_home: yes
        state: present

    - name: Download Node Exporter
      unarchive:
        src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
        creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"

    - name: Install Node Exporter binary
      copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: /usr/local/bin/node_exporter
        mode: '0755'
        owner: root
        group: root
        remote_src: yes

    - name: Create Node Exporter systemd service
      copy:
        content: |
          [Unit]
          Description=Prometheus Node Exporter
          After=network.target
          
          [Service]
          Type=simple
          User=prometheus
          Group=prometheus
          ExecStart=/usr/local/bin/node_exporter \
            --collector.systemd \
            --collector.processes \
            --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/) \
            --collector.netclass.ignored-devices=^(veth.*|docker.*|br.*)$ \
            --web.listen-address=:9100
          Restart=always
          RestartSec=10
          
          # Security hardening
          NoNewPrivileges=true
          PrivateTmp=true
          ProtectSystem=strict
          ProtectHome=true
          ProtectKernelTunables=true
          ProtectKernelModules=true
          ProtectControlGroups=true
          RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
          RestrictNamespaces=true
          LockPersonality=true
          MemoryDenyWriteExecute=true
          RestrictRealtime=true
          RestrictSUIDSGID=true
          
          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/node_exporter.service
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start Node Exporter
      systemd:
        name: node_exporter
        enabled: yes
        state: started
        daemon_reload: yes

    # Prometheus Setup
    - name: Create prometheus config directory
      file:
        path: "{{ prometheus_config_dir }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'

    - name: Download Prometheus
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
        creates: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"

    - name: Install Prometheus binaries
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        mode: '0755'
        owner: root
        group: root
        remote_src: yes
      loop:
        - prometheus
        - promtool

    - name: Create Prometheus configuration
      copy:
        content: |
          global:
            scrape_interval: 15s
            evaluation_interval: 15s
            external_labels:
              cluster: 'agent-vm'
              environment: 'production'
          
          rule_files:
            - "alert_rules.yml"
          
          alerting:
            alertmanagers:
              - static_configs:
                  - targets:
                    - localhost:9093
          
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['localhost:9090']
          
            - job_name: 'node-exporter'
              static_configs:
                - targets: ['localhost:9100']
              scrape_interval: 5s
              metrics_path: /metrics
          
            - job_name: 'fastapi-app'
              static_configs:
                - targets: ['localhost:8000']
              metrics_path: /metrics
              scrape_interval: 5s
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: restart prometheus

    - name: Create Prometheus alert rules
      copy:
        content: |
          groups:
            - name: system_alerts
              rules:
                - alert: HighCPUUsage
                  expr: 100 - (avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: "High CPU usage detected"
                    description: "CPU usage is above 80% for more than 2 minutes (current value: {{ $value }}%)"
                
                - alert: HighMemoryUsage
                  expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: "High memory usage detected"
                    description: "Memory usage is above 85% for more than 2 minutes (current value: {{ $value }}%)"
                
                - alert: DiskSpaceLow
                  expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 90
                  for: 1m
                  labels:
                    severity: critical
                  annotations:
                    summary: "Disk space critically low"
                    description: "Disk usage is above 90% on {{ $labels.device }} (current value: {{ $value }}%)"
                
                - alert: NodeDown
                  expr: up{job="node-exporter"} == 0
                  for: 1m
                  labels:
                    severity: critical
                  annotations:
                    summary: "Node Exporter is down"
                    description: "Node Exporter has been down for more than 1 minute"
                
                - alert: FastAPIDown
                  expr: up{job="fastapi-app"} == 0
                  for: 30s
                  labels:
                    severity: critical
                  annotations:
                    summary: "FastAPI application is down"
                    description: "FastAPI application has been unreachable for more than 30 seconds"
                
                - alert: FastAPIHighLatency
                  expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: "FastAPI high latency detected"
                    description: "95th percentile latency is above 1 second (current value: {{ $value }}s)"
                
                - alert: FastAPIHighErrorRate
                  expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.05
                  for: 2m
                  labels:
                    severity: warning
                  annotations:
                    summary: "FastAPI high error rate detected"
                    description: "Error rate is above 5% (current value: {{ $value }}%)"
        dest: "{{ prometheus_config_dir }}/alert_rules.yml"
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: restart prometheus

    - name: Create Prometheus systemd service
      copy:
        content: |
          [Unit]
          Description=Prometheus
          After=network-online.target
          Wants=network-online.target
          
          [Service]
          Type=simple
          User=prometheus
          Group=prometheus
          ExecReload=/bin/kill -HUP $MAINPID
          ExecStart=/usr/local/bin/prometheus \
            --config.file={{ prometheus_config_dir }}/prometheus.yml \
            --storage.tsdb.path={{ prometheus_data_dir }} \
            --web.console.templates=/etc/prometheus/consoles \
            --web.console.libraries=/etc/prometheus/console_libraries \
            --web.listen-address=0.0.0.0:9090 \
            --web.external-url=http://localhost:9090/ \
            --storage.tsdb.retention.time=30d \
            --storage.tsdb.retention.size=10GB
          
          Restart=always
          RestartSec=10
          
          # Security hardening
          NoNewPrivileges=true
          PrivateTmp=true
          ProtectSystem=strict
          ReadWritePaths={{ prometheus_data_dir }}
          ProtectHome=true
          ProtectKernelTunables=true
          ProtectKernelModules=true
          ProtectControlGroups=true
          RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
          RestrictNamespaces=true
          LockPersonality=true
          MemoryDenyWriteExecute=true
          RestrictRealtime=true
          RestrictSUIDSGID=true
          
          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start Prometheus
      systemd:
        name: prometheus
        enabled: yes
        state: started
        daemon_reload: yes

    # Grafana Setup
    - name: Add Grafana GPG key
      apt_key:
        url: https://apt.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      apt_repository:
        repo: "deb https://apt.grafana.com stable main"
        state: present
        filename: grafana

    - name: Install Grafana
      apt:
        name: "grafana={{ grafana_version }}"
        state: present
        update_cache: yes

    - name: Configure Grafana
      template:
        src: grafana.ini.j2
        dest: /etc/grafana/grafana.ini
        owner: root
        group: grafana
        mode: '0640'
        backup: yes

    - name: Create Grafana custom configuration
      copy:
        content: |
          [server]
          protocol = http
          http_addr = 0.0.0.0
          http_port = 3000
          domain = localhost
          root_url = %(protocol)s://%(domain)s:%(http_port)s/
          serve_from_sub_path = false
          
          [security]
          admin_user = admin
          admin_password = changeme
          secret_key = SW2YcwTIb9zpOOhoPsMm
          disable_gravatar = true
          cookie_secure = false
          cookie_samesite = lax
          
          [users]
          allow_sign_up = false
          allow_org_create = false
          auto_assign_org = true
          auto_assign_org_role = Viewer
          
          [auth.anonymous]
          enabled = false
          
          [auth.basic]
          enabled = true
          
          [analytics]
          reporting_enabled = false
          check_for_updates = false
          
          [log]
          mode = console file
          level = info
          
          [paths]
          data = {{ grafana_data_dir }}
          logs = /var/log/grafana
          plugins = {{ grafana_data_dir }}/plugins
          provisioning = /etc/grafana/provisioning
        dest: /etc/grafana/grafana.ini
        owner: root
        group: grafana
        mode: '0640'
      notify: restart grafana

    - name: Create Grafana provisioning directories
      file:
        path: "{{ item }}"
        state: directory
        owner: grafana
        group: grafana
        mode: '0755'
      loop:
        - /etc/grafana/provisioning/dashboards
        - /etc/grafana/provisioning/datasources
        - /etc/grafana/provisioning/notifiers
        - /var/lib/grafana/dashboards

    - name: Configure Prometheus datasource
      copy:
        content: |
          apiVersion: 1
          
          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://localhost:9090
              isDefault: true
              editable: true
              jsonData:
                timeInterval: 15s
                queryTimeout: 60s
                httpMethod: POST
        dest: /etc/grafana/provisioning/datasources/prometheus.yml
        owner: grafana
        group: grafana
        mode: '0640'

    - name: Create VM Agent dashboard
      copy:
        content: |
          {
            "annotations": {
              "list": [
                {
                  "builtIn": 1,
                  "datasource": "-- Grafana --",
                  "enable": true,
                  "hide": true,
                  "iconColor": "rgba(0, 211, 255, 1)",
                  "name": "Annotations & Alerts",
                  "type": "dashboard"
                }
              ]
            },
            "editable": true,
            "gnetId": null,
            "graphTooltip": 1,
            "id": null,
            "links": [],
            "panels": [
              {
                "datasource": "Prometheus",
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "palette-classic"
                    },
                    "custom": {
                      "axisLabel": "",
                      "axisPlacement": "auto",
                      "barAlignment": 0,
                      "drawStyle": "line",
                      "fillOpacity": 10,
                      "gradientMode": "none",
                      "hideFrom": {
                        "tooltip": false,
                        "viz": false,
                        "legend": false
                      },
                      "lineInterpolation": "linear",
                      "lineWidth": 1,
                      "pointSize": 5,
                      "scaleDistribution": {
                        "type": "linear"
                      },
                      "showPoints": "never",
                      "spanNulls": true,
                      "stacking": {
                        "group": "A",
                        "mode": "none"
                      },
                      "thresholdsStyle": {
                        "mode": "line"
                      }
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "yellow",
                          "value": 60
                        },
                        {
                          "color": "red",
                          "value": 80
                        }
                      ]
                    },
                    "unit": "percent"
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 8,
                  "w": 8,
                  "x": 0,
                  "y": 0
                },
                "id": 2,
                "options": {
                  "tooltip": {
                    "mode": "single"
                  },
                  "legend": {
                    "calcs": ["lastNotNull", "mean"],
                    "displayMode": "table",
                    "placement": "bottom"
                  }
                },
                "pluginVersion": "11.1.0",
                "targets": [
                  {
                    "expr": "100 - (avg(irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "CPU Usage",
                    "refId": "A"
                  }
                ],
                "title": "CPU Usage",
                "type": "timeseries"
              },
              {
                "datasource": "Prometheus",
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "palette-classic"
                    },
                    "custom": {
                      "axisLabel": "",
                      "axisPlacement": "auto",
                      "barAlignment": 0,
                      "drawStyle": "line",
                      "fillOpacity": 10,
                      "gradientMode": "none",
                      "hideFrom": {
                        "tooltip": false,
                        "viz": false,
                        "legend": false
                      },
                      "lineInterpolation": "linear",
                      "lineWidth": 1,
                      "pointSize": 5,
                      "scaleDistribution": {
                        "type": "linear"
                      },
                      "showPoints": "never",
                      "spanNulls": true,
                      "stacking": {
                        "group": "A",
                        "mode": "none"
                      },
                      "thresholdsStyle": {
                        "mode": "line"
                      }
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "yellow",
                          "value": 70
                        },
                        {
                          "color": "red",
                          "value": 85
                        }
                      ]
                    },
                    "unit": "percent"
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 8,
                  "w": 8,
                  "x": 8,
                  "y": 0
                },
                "id": 3,
                "options": {
                  "tooltip": {
                    "mode": "single"
                  },
                  "legend": {
                    "calcs": ["lastNotNull", "mean"],
                    "displayMode": "table",
                    "placement": "bottom"
                  }
                },
                "pluginVersion": "11.1.0",
                "targets": [
                  {
                    "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "Memory Usage",
                    "refId": "A"
                  }
                ],
                "title": "Memory Usage",
                "type": "timeseries"
              },
              {
                "datasource": "Prometheus",
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "palette-classic"
                    },
                    "custom": {
                      "axisLabel": "",
                      "axisPlacement": "auto",
                      "barAlignment": 0,
                      "drawStyle": "line",
                      "fillOpacity": 10,
                      "gradientMode": "none",
                      "hideFrom": {
                        "tooltip": false,
                        "viz": false,
                        "legend": false
                      },
                      "lineInterpolation": "linear",
                      "lineWidth": 1,
                      "pointSize": 5,
                      "scaleDistribution": {
                        "type": "linear"
                      },
                      "showPoints": "never",
                      "spanNulls": true,
                      "stacking": {
                        "group": "A",
                        "mode": "none"
                      },
                      "thresholdsStyle": {
                        "mode": "line"
                      }
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "yellow",
                          "value": 80
                        },
                        {
                          "color": "red",
                          "value": 90
                        }
                      ]
                    },
                    "unit": "percent"
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 8,
                  "w": 8,
                  "x": 16,
                  "y": 0
                },
                "id": 4,
                "options": {
                  "tooltip": {
                    "mode": "single"
                  },
                  "legend": {
                    "calcs": ["lastNotNull", "mean"],
                    "displayMode": "table",
                    "placement": "bottom"
                  }
                },
                "pluginVersion": "11.1.0",
                "targets": [
                  {
                    "expr": "(1 - (node_filesystem_avail_bytes{fstype!=\"tmpfs\"} / node_filesystem_size_bytes{fstype!=\"tmpfs\"})) * 100",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "{{ mountpoint }}",
                    "refId": "A"
                  }
                ],
                "title": "Disk Usage",
                "type": "timeseries"
              },
              {
                "datasource": "Prometheus",
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "palette-classic"
                    },
                    "custom": {
                      "axisLabel": "",
                      "axisPlacement": "auto",
                      "barAlignment": 0,
                      "drawStyle": "line",
                      "fillOpacity": 10,
                      "gradientMode": "none",
                      "hideFrom": {
                        "tooltip": false,
                        "viz": false,
                        "legend": false
                      },
                      "lineInterpolation": "linear",
                      "lineWidth": 1,
                      "pointSize": 5,
                      "scaleDistribution": {
                        "type": "linear"
                      },
                      "showPoints": "never",
                      "spanNulls": true,
                      "stacking": {
                        "group": "A",
                        "mode": "none"
                      },
                      "thresholdsStyle": {
                        "mode": "off"
                      }
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        }
                      ]
                    },
                    "unit": "reqps"
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 8,
                  "w": 12,
                  "x": 0,
                  "y": 8
                },
                "id": 5,
                "options": {
                  "tooltip": {
                    "mode": "single"
                  },
                  "legend": {
                    "calcs": ["lastNotNull", "mean"],
                    "displayMode": "table",
                    "placement": "bottom"
                  }
                },
                "pluginVersion": "11.1.0",
                "targets": [
                  {
                    "expr": "rate(http_requests_total[5m])",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "{{ method }} {{ handler }}",
                    "refId": "A"
                  }
                ],
                "title": "API Request Rate",
                "type": "timeseries"
              },
              {
                "datasource": "Prometheus",
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "palette-classic"
                    },
                    "custom": {
                      "axisLabel": "",
                      "axisPlacement": "auto",
                      "barAlignment": 0,
                      "drawStyle": "line",
                      "fillOpacity": 10,
                      "gradientMode": "none",
                      "hideFrom": {
                        "tooltip": false,
                        "viz": false,
                        "legend": false
                      },
                      "lineInterpolation": "linear",
                      "lineWidth": 1,
                      "pointSize": 5,
                      "scaleDistribution": {
                        "type": "linear"
                      },
                      "showPoints": "never",
                      "spanNulls": true,
                      "stacking": {
                        "group": "A",
                        "mode": "none"
                      },
                      "thresholdsStyle": {
                        "mode": "line"
                      }
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        },
                        {
                          "color": "yellow",
                          "value": 0.5
                        },
                        {
                          "color": "red",
                          "value": 1
                        }
                      ]
                    },
                    "unit": "s"
                  },
                  "overrides": []
                },
                "gridPos": {
                  "h": 8,
                  "w": 12,
                  "x": 12,
                  "y": 8
                },
                "id": 6,
                "options": {
                  "tooltip": {
                    "mode": "single"
                  },
                  "legend": {
                    "calcs": ["lastNotNull", "mean"],
                    "displayMode": "table",
                    "placement": "bottom"
                  }
                },
                "pluginVersion": "11.1.0",
                "targets": [
                  {
                    "expr": "histogram_quantile(0.50, rate(http_request_duration_seconds_bucket[5m]))",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "p50",
                    "refId": "A"
                  },
                  {
                    "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "p95",
                    "refId": "B"
                  },
                  {
                    "expr": "histogram_quantile(0.99, rate(http_request_duration_seconds_bucket[5m]))",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "p99",
                    "refId": "C"
                  }
                ],
                "title": "API Response Time",
                "type": "timeseries"
              },
              {
                "datasource": "Prometheus",
                "fieldConfig": {
                  "defaults": {
                    "color": {
                      "mode": "palette-classic"
                    },
                    "custom": {
                      "axisLabel": "",
                      "axisPlacement": "auto",
                      "barAlignment": 0,
                      "drawStyle": "line",
                      "fillOpacity": 10,
                      "gradientMode": "none",
                      "hideFrom": {
                        "tooltip": false,
                        "viz": false,
                        "legend": false
                      },
                      "lineInterpolation": "linear",
                      "lineWidth": 1,
                      "pointSize": 5,
                      "scaleDistribution": {
                        "type": "linear"
                      },
                      "showPoints": "never",
                      "spanNulls": true,
                      "stacking": {
                        "group": "A",
                        "mode": "percent"
                      },
                      "thresholdsStyle": {
                        "mode": "off"
                      }
                    },
                    "mappings": [],
                    "thresholds": {
                      "mode": "absolute",
                      "steps": [
                        {
                          "color": "green",
                          "value": null
                        }
                      ]
                    },
                    "unit": "percent"
                  },
                  "overrides": [
                    {
                      "matcher": {
                        "id": "byRegexp",
                        "options": "5xx"
                      },
                      "properties": [
                        {
                          "id": "color",
                          "value": {
                            "mode": "fixed",
                            "fixedColor": "red"
                          }
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byRegexp",
                        "options": "4xx"
                      },
                      "properties": [
                        {
                          "id": "color",
                          "value": {
                            "mode": "fixed",
                            "fixedColor": "yellow"
                          }
                        }
                      ]
                    },
                    {
                      "matcher": {
                        "id": "byRegexp",
                        "options": "2xx|3xx"
                      },
                      "properties": [
                        {
                          "id": "color",
                          "value": {
                            "mode": "fixed",
                            "fixedColor": "green"
                          }
                        }
                      ]
                    }
                  ]
                },
                "gridPos": {
                  "h": 8,
                  "w": 24,
                  "x": 0,
                  "y": 16
                },
                "id": 7,
                "options": {
                  "tooltip": {
                    "mode": "single"
                  },
                  "legend": {
                    "calcs": ["lastNotNull"],
                    "displayMode": "table",
                    "placement": "bottom"
                  }
                },
                "pluginVersion": "11.1.0",
                "targets": [
                  {
                    "expr": "rate(http_requests_total{status=~\"2..\"}[5m])",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "2xx Success",
                    "refId": "A"
                  },
                  {
                    "expr": "rate(http_requests_total{status=~\"3..\"}[5m])",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "3xx Redirects",
                    "refId": "B"
                  },
                  {
                    "expr": "rate(http_requests_total{status=~\"4..\"}[5m])",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "4xx Client Error",
                    "refId": "C"
                  },
                  {
                    "expr": "rate(http_requests_total{status=~\"5..\"}[5m])",
                    "format": "time_series",
                    "intervalFactor": 1,
                    "legendFormat": "5xx Server Error",
                    "refId": "D"
                  }
                ],
                "title": "HTTP Status Codes",
                "type": "timeseries"
              }
            ],
            "refresh": "10s",
            "schemaVersion": 27,
            "style": "dark",
            "tags": ["vm", "agent", "api"],
            "templating": {
              "list": []
            },
            "time": {
              "from": "now-1h",
              "to": "now"
            },
            "timepicker": {
              "refresh_intervals": ["5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h"],
              "time_options": ["5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d"]
            },
            "timezone": "",
            "title": "VM Agent Dashboard",
            "uid": "vm-agent",
            "version": 1
          }
        dest: /var/lib/grafana/dashboards/vm-agent.json
        owner: grafana
        group: grafana
        mode: '0644'

    - name: Configure dashboard provisioning
      copy:
        content: |
          apiVersion: 1
          
          providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              updateIntervalSeconds: 10
              allowUiUpdates: true
              options:
                path: /var/lib/grafana/dashboards
                foldersFromFilesStructure: true
        dest: /etc/grafana/provisioning/dashboards/default.yml
        owner: grafana
        group: grafana
        mode: '0640'

    - name: Enable and start Grafana
      systemd:
        name: grafana-server
        enabled: yes
        state: started

  handlers:
    - name: restart grafana
      systemd:
        name: grafana-server
        state: restarted
    
    - name: restart prometheus
      systemd:
        name: prometheus
        state: restarted