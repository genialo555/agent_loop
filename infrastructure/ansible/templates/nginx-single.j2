# Nginx Single Environment Configuration
# Routes all traffic to a single backend environment

upstream backend {
    server localhost:{{ target_port }} max_fails=3 fail_timeout=30s;
    
    # Health checks (if nginx-plus is available)
    # health_check interval=30s fails=3 passes=2;
}

server {
    listen 80;
    server_name {{ ansible_default_ipv4.address | default('localhost') }} _;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    
    # Add deployment information
    add_header X-Deployment-Type "single" always;
    add_header X-Backend-Port "{{ target_port }}" always;
    
    # Logging with enhanced format
    log_format agent_loop_format '$remote_addr - $remote_user [$time_local] "$request" '
                                 '$status $body_bytes_sent "$http_referer" '
                                 '"$http_user_agent" "$http_x_forwarded_for" '
                                 'rt=$request_time uct="$upstream_connect_time" '
                                 'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/agent-loop-access.log agent_loop_format;
    error_log /var/log/nginx/agent-loop-error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=health:1m rate=1r/s;
    
    # Health check endpoint
    location /health {
        limit_req zone=health burst=5 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Fast health checks
        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Cache health check responses briefly
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # Readiness check endpoint
    location /ready {
        limit_req zone=health burst=5 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Metrics endpoint (for Prometheus)
    location /metrics {
        # Allow access only from monitoring networks
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Metrics should respond quickly
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # API documentation
    location /docs {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # OpenAPI schema
    location /openapi.json {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache OpenAPI schema
        add_header Cache-Control "public, max-age=3600" always;
    }
    
    # Main API endpoints
    location /run-agent {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for model inference
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;  # Allow up to 2 minutes for model inference
        proxy_read_timeout 120s;
        
        # Request/response size limits
        client_max_body_size 1M;
        proxy_max_temp_file_size 0;
        
        # Add request tracing
        set $request_id $request_id;
        proxy_set_header X-Request-ID $request_id;
        add_header X-Request-ID $request_id always;
        
        # WebSocket support if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    
    # Ollama integration endpoints
    location /ollama/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Ollama can take time for model loading
        proxy_connect_timeout 15s;
        proxy_send_timeout 300s;  # 5 minutes for large model responses
        proxy_read_timeout 300s;
        
        proxy_set_header X-Request-ID $request_id;
        add_header X-Request-ID $request_id always;
    }
    
    # Static files (if any)
    location /static/ {
        proxy_pass http://backend;
        
        # Cache static files
        add_header Cache-Control "public, max-age=86400" always;  # 1 day
        
        # Gzip for static content
        gzip_static on;
    }
    
    # Default route - catch all
    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering configuration
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        proxy_temp_file_write_size 8k;
        
        proxy_set_header X-Request-ID $request_id;
        add_header X-Request-ID $request_id always;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # Robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Security - deny access to hidden files and sensitive directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ^/(\.user\.ini|\.htaccess|\.htpasswd|\.sh|\.bak|\.config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Map for WebSocket upgrade headers
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Server for handling SSL redirects (if needed)
# server {
#     listen 80;
#     server_name {{ ansible_default_ipv4.address | default('localhost') }};
#     return 301 https://$server_name$request_uri;
# }