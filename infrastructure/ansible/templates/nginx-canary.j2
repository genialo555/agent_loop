# Nginx Canary Configuration for Blue-Green Deployment
# This configuration splits traffic between current and target environments
# for safe progressive rollout

upstream backend_current {
    server localhost:{{ current_env_port }} max_fails=3 fail_timeout=30s;
}

upstream backend_target {
    server localhost:{{ target_env_port }} max_fails=3 fail_timeout=30s;
}

# Split traffic based on canary percentage
split_clients $remote_addr $backend {
    {{ canary_percentage }}% backend_target;
    *          backend_current;
}

server {
    listen 80;
    server_name {{ ansible_default_ipv4.address | default('localhost') }};
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Add canary deployment headers for debugging
    add_header X-Deployment-Type "canary" always;
    add_header X-Canary-Percentage "{{ canary_percentage }}" always;
    
    # Logging
    access_log /var/log/nginx/agent-loop-access.log combined;
    error_log /var/log/nginx/agent-loop-error.log warn;
    
    # Health check endpoint (always route to current environment)
    location /health {
        proxy_pass http://backend_current;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Health check should be fast
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Metrics endpoint (aggregate from both environments)
    location /metrics {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Add backend information to response
        add_header X-Backend-Server $upstream_addr always;
    }
    
    # Main application routes (split between environments)
    location / {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Add environment information to response headers
        add_header X-Backend-Server $upstream_addr always;
        add_header X-Environment-Split $backend always;
        
        # Handle WebSocket upgrades if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # API routes with sticky sessions for consistency
    location /run-agent {
        # Use IP hash for session consistency during canary
        hash $remote_addr consistent;
        
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for model inference
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Add request ID for tracing
        set $request_id $request_id;
        proxy_set_header X-Request-ID $request_id;
        add_header X-Request-ID $request_id always;
        add_header X-Backend-Server $upstream_addr always;
    }
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    # Security - deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS redirect (if SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     server_name {{ ansible_default_ipv4.address | default('localhost') }};
#     
#     ssl_certificate /path/to/certificate.crt;
#     ssl_certificate_key /path/to/private.key;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     include /etc/nginx/sites-available/agent-loop-common.conf;
# }